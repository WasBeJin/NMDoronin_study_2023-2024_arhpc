# РОССИЙСКИЙ УНИВЕРСИТЕТ ДРУЖБЫ НАРОДОВ

## _Факультет физико-математических и естественных наук_ 
## направление: _Компьютерные и информационные науки_









## Лабораторная работа №5

### дисциплина: *Архитектура компьютеров и операционные системы*



#### студент:     Доронин Никита Максимович
#### Группа:     НКАбд-02-23

##Цель работы
 Приобретение практических навыков работы в Midnight Commander. Освоение инструкций языка ассемблера mov и int.
##Теория
Midnight Commander (MC) - это файловый менеджер, который позволяет просматривать структуру каталогов и выполнять основные операции по управлению файловой системой.

Язык ассемблера NASM, как правило, состоит из трёх секций: секция кода программы (SECTION .text), секция инициированных данных (SECTION .data) и секция неинициализированных данных (SECTION .bss).
 
Используются директивы DB, DW, DD, DQ и DT для объявления инициированных данных в секции .data.

Инструкция языка ассемблера mov предназначена для дублирования данных источника в приемнике. Инструкция языка ассемблера int предназначена для вызова прерывания с указанным номером.

##Ход работы
###Начало работы с Midnight Commander

Активация оболочки Midnight Commander: команда mc в командной строке, затем Enter.
![](https://github.com/WasBeJin/NMDoronin_study_2023-2024_arhpc/blob/main/Labs/lab5/resourses/1.png?raw=true)

Создание папки lab05 в каталоге …/NMDoronin_study_2023-2024_arhpc/Labs.



Редактирование программы в файле lab5-1.asm.

![](https://github.com/WasBeJin/NMDoronin_study_2023-2024_arhpc/blob/main/Labs/lab5/resourses/2.png?raw=true)

Сохранение изменений и закрытие файла.

Компиляция файла lab5-1.asm в объектный файл, 
компоновка и запуск получившегося файла.
![](https://github.com/WasBeJin/NMDoronin_study_2023-2024_arhpc/blob/main/Labs/lab5/resourses/итог%201.png?raw=true)
Ввод своих ФИО в программу.

Подключение внешнего файла in_out.asm


Скачивание файла in_out.asm с ТУИС.

Копирование файла in_out.asm в каталог с файлом lab5-1.asm.
![](https://github.com/WasBeJin/NMDoronin_study_2023-2024_arhpc/blob/main/Labs/lab5/resourses/3.png?raw=true)
Создание копии файла lab5-1.asm с именем lab5-2.asm.

Изменение текста программы в файле lab5-2.asm в соответствии с листингом.

![](https://github.com/WasBeJin/NMDoronin_study_2023-2024_arhpc/blob/main/Labs/lab5/resourses/4.png?raw=true)

Создание исполняемого файла и его проверка.

Создание копии файла lab5-1.asm.

Создание копии файла lab5-1.asm.

Внесение изменений в программу для вывода введенной строки на экран.

![](https://github.com/WasBeJin/NMDoronin_study_2023-2024_arhpc/blob/main/Labs/lab5/resourses/итог%202.png?raw=true)

Создание копии файла lab5-2.asm
Получение исполняемого файла и проверка его работоспособности.

Проверка работы программы
Ввод ФИО и проверка работы программы.

![](https://github.com/WasBeJin/NMDoronin_study_2023-2024_arhpc/blob/main/Labs/lab5/resourses/итог%203.png?raw=true)
##Вывод

В ходе лабораторной работы №5 были приобретены практические навыки работы в Midnight Commander и освоены инструкции языка ассемблера mov и int. Полученные навыки позволяют более эффективно управлять файловой системой и создавать программы на языке ассемблера.

##Проверочные вопросы

####Назначение Midnight Commander (mc)
 - это файловый менеджер для UNIX-подобных систем, который предоставляет текстовый интерфейс для просмотра и управления файлами и каталогами. Он предоставляет двухпанельный интерфейс и поддерживает копирование, перемещение, удаление и редактирование файлов, а также архивацию и просмотр содержимого архивов. MC также позволяет выполнять команды shell и поиск файлов.


####Какие операции с файлами можно выполнить как с помощью команд bash, так и с помощью меню (комбинаций клавиш) mc? Приведите несколько примеров.
Просмотр содержимого каталога: ls в bash и Ctrl + \ в MC.
Переименование файла: mv в bash и F6 в MC.

Копирование файла: cp в bash и F5 в MC.

Удаление файла: rm в bash и F8 в MC.

Создание нового каталога: mkdir в bash и F7 в MC.

###Структура программы на языке ассемблера NASM 
состоит из трех основных секций: .text, .data и .bss.
 Секция .text содержит исполняемый код программы, .data - инициализированные данные, а .bss - неинициализированные данные, которые не имеют предопределенных значений, но будут инициализированы во время выполнения программы.

Секция .data используется для хранения инициализированных данных, которые имеют конкретные значения во время компиляции программы.

 Секция .bss используется для хранения неинициализированных данных, которые занимают место в памяти, но не имеют определенных значений во время компиляции.

Компоненты db, dw, dd, dq и dt языка ассемблера NASM используются для объявления переменных и массивов. 

Например, db используется для объявления однобайтных переменных, а dd - для объявления четырехбайтных переменных.

Инструкция mov eax, esi копирует значение из регистра esi в регистр eax.

Инструкция int 80h используется для вызова системного прерывания с номером 80h в ядре Linux.

 Это прерывание используется для выполнения системных вызовов, таких как создание процесса, чтение или запись файла, выделение памяти и т.д.

